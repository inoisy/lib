@import "./_variables";
@import "./_mixins";
// @import '../../styles/common/_colors';

// $text-field-border-radius: $border-radius-root !default;
// $text-field-line-height: 20px !default;
// $text-field-padding: 8px 0 8px !default;
// $text-field-control-min-height: 56px !default;
// $text-field-dense-padding: 4px 0 2px !default;
// $text-field-append-prepend-margin: 4px !default;
// $text-field-dense-append-prepend-margin: 0 !default;
// $text-field-dense-icon-append-prepend-margin-top: 8px !default;
// $text-field-filled-full-width-outlined-slot-min-height: 56px !default;
// $text-field-filled-full-width-outlined-dense-slot-min-height: 52px !default;
// $text-field-filled-full-width-outlined-single-line-slot-min-height: 40px !default;
// $text-field-filled-border-radius: $text-field-border-radius $text-field-border-radius 0 0 !default;
// $text-field-counter-margin: 8px !default;
// $text-field-label-top: 6px !default;
// $text-field-label-active-transform: translateY(-18px) scale(.75) !default;
// $text-field-details-min-height: 14px !default;
// $text-field-filled-full-width-label-top: 18px !default;
// $text-field-filled-full-width-label-active-transform: translateY(-6px) scale(.75) !default;
// $text-field-dense-label-top: 17px !default;
// $text-field-dense-label-active-transform: translateY(-10px) scale(.75) !default;
// $text-field-single-line-label-top: 11px !default;
// $text-field-filled-margin-top: 22px !default;
// $text-field-enclosed-prepend-append-margin-top: 17px !default;
// $text-field-dense-prepend-append-margin-top: 14px !default;
// $text-field-single-line-prepend-append-margin-top: 9px !default;
// $text-field-outlined-prepend-append-margin-top: 8px !default;
// $text-field-enclosed-details-padding: 0 12px !default;
// $text-field-details-padding-top: 0 !default;
// $text-field-details-margin-bottom: 8px !default;
// $text-field-outlined-margin-bottom: 16px !default;
// $text-field-outlined-label-position-x: 18px !default;
// $text-field-outlined-label-position-y: -24px !default;
// $text-field-outlined-dense-label-position-x: 10px !default;
// $text-field-outlined-dense-label-position-y: -16px !default;
// $text-field-prefix-max-height: 32px !default;
// $text-field-outlined-append-prepend-outer-margin-top: 18px !default;
// $text-field-outlined-fieldset-top: -5px !default;
// $text-field-outlined-fieldset-border-width: 1px !default;
// $text-field-outlined-fieldset-padding: 8px !default;
// $text-field-outlined-legend-line-height: 11px !default;
// $text-field-rounded-legend-margin: 12px !default;
// $text-field-rounded-border-radius: 28px !default;
// $text-field-shaped-border-radius: 16px 16px 0 0 !default;
// $text-field-outlined-fieldset-border: 2px solid currentColor !default;
// $text-field-outlined-rounded-slot-padding: 0 24px !default;
// $text-field-solo-label-top: calc(50% - 9px) !default;
// $text-field-solo-control-min-height: 48px !default;
// $text-field-solo-dense-control-min-height: 38px !default;
// $text-field-solo-outer-margin-top: 12px !default;
// $text-field-solo-dense-outer-margin-top: 7px !default;
// $text-field-active-label-height: 12px !default;
// $text-field-active-label-height: 14px;
// // $text-field-details-min-height: 17px;
// $text-field-control-min-height: (
//     'value': 56px,
//     'breakpoins':(
//         'sm': 48px,
//     )
// );
// $text-field-label-active-transform: (
//     'value': translateY(-29px) scale(.77),
//     'breakpoins':(
//         'sm': translateY(-25px) scale(.77)
//     )
// );

// @mixin generate-responsibility($property, $value) {
//     @if type-of($value) == 'map' {
//         $default-property: map-get($value, 'value');
//         $breakpoins: map-get($value, 'breakpoins');
//         $has-breakpoins-key: (type-of($breakpoins) == map);

//         #{$property}: $default-property;
//         @if ($has-breakpoins-key) {
//             @each $key, $val in $breakpoins {
//                 @include respond-to(#{$key}) {
//                     #{$property}: $val;
//                 }
//             }
//         }
//     }
//     @else {
//         #{$property}: $value;
//     }
// }

// /* stylelint-disable no-duplicate-selectors */
// @mixin prepend-append-margin-top($margin-top) {
//     .v-input__prepend-outer,
//     .v-input__prepend-inner,
//     .v-input__append-inner,
//     .v-input__append-outer {
//         margin-top: $margin-top;
//     }
// }

// @mixin outer-margin-top($margin-top) {
//     .v-input__prepend-outer,
//     .v-input__append-outer {
//         // margin-top: $margin-top;
//         margin-top: auto;
//         margin-bottom: auto;
//     }
// }

// @mixin label-position($top, $translateY, $scale: .75) {
//     .v-label {
//         top: $top;

//         &--active {
//             transform: translateY($translateY) scale($scale);
//         }
//     }
// }

@include theme(v-text-field) using ($material) {
    > .v-input__control > .v-input__slot:before {
        border-color: $base-100;
    }

    &:not(.v-input--has-state):hover > .v-input__control > .v-input__slot:before {
        border-color: $base-500;
        //map-deep-get($material, 'text', 'primary');
    }

    &.v-input--is-disabled .v-input__slot:before {
        border-image: repeating-linear-gradient(to right, #{map-deep-get($material, 'text', 'disabled')} 0, #{map-deep-get($material, 'text', 'disabled')} 2px, transparent 2px, transparent 4px) 1 repeat;
    }

    &--filled {
        > .v-input__control > .v-input__slot {
            background: map-deep-get($material, 'text-fields', 'filled');
        }

        &:not(.v-input--is-focused):not(.v-input--has-state) {
            > .v-input__control > .v-input__slot:hover {
                background: map-deep-get($material, 'text-fields', 'filled-hover');
            }
        }
    }

    &--solo {
        > .v-input__control > .v-input__slot {
            background: map-get($material, 'cards');
        }
    }

    &--solo-inverted {
        > .v-input__control > .v-input__slot {
            background: map-deep-get($material, 'inputs', 'solo-inverted');
        }

        &.v-input--is-focused {
            > .v-input__control > .v-input__slot {
                background: map-deep-get($material, 'inputs', 'solo-inverted-focused');

                input {
                    color: map-deep-get($material, 'inputs', 'solo-inverted-focused-text');
                }

                input::placeholder {
                    color: map-deep-get($material, 'inputs', 'solo-inverted-focused-placeholder');
                }

                .v-label {
                    color: map-deep-get($material, 'inputs', 'solo-inverted-focused-label');
                }
            }
        }
    }

    &--outlined {
        &:not(.v-input--is-focused) {
            &:not(.v-input--has-state) {
                > .v-input__control > .v-input__slot fieldset {
                    color: map-deep-get($material, 'text-fields', 'outlined');
                }

                &:not(.v-input--is-disabled) {
                    > .v-input__control > .v-input__slot:hover fieldset {
                        color: map-deep-get($material, 'text-fields', 'outlined-hover');
                    }
                }

                &.v-input--is-disabled {
                    > .v-input__control > .v-input__slot fieldset {
                        color: map-deep-get($material, 'text-fields', 'outlined-disabled');
                    }
                }
            }
        }
    }
}

.v-text-field {
    // margin-top: calc(#{$input-top-spacing} - #{$text-field-active-label-height});
    padding-top: $text-field-active-label-height;

    @include respond-to(xs) {
        padding-top: 14px;
    }

    &__prefix,
    &__suffix {
        @include generate-responsibility(line-height, $text-field-line-height);
    }

    input {
        flex: 1 1 auto;
        width: 100%;
        min-width: 0;
        max-width: 100%;
        // padding: $text-field-padding;
        // line-height: $text-field-line-height;
        @include generate-responsibility(line-height, $text-field-line-height);
        @include generate-responsibility(padding, $text-field-padding);
    }

    .v-input__slot {
        margin-bottom: 4px;
    }

    .v-input__control {
        position: relative;

        @include generate-responsibility(min-height, $text-field-control-min-height);
    }

    fieldset,
    .v-input__control,
    .v-input__slot {
        border-radius: inherit;
    }

    fieldset,
    .v-input__control {
        color: inherit;
    }

    &.v-input--has-state {
        .v-input__control > .v-text-field__details > .v-counter {
            color: inherit;
        }
    }

    &.v-input--is-disabled {
        .v-input__control > .v-text-field__details > .v-counter,
        .v-input__control > .v-text-field__details > .v-messages {
            color: inherit;
        }
    }

    &.v-input--dense {
        padding-top: 0;

        .v-label {
            top: 4px;
        }

        &:not(.v-text-field--outlined) {
            .v-text-field__prefix,
            .v-text-field__suffix,
            input {
                padding: $text-field-dense-padding;
            }

            .v-text-field__prefix {
                padding-right: $text-field-append-prepend-margin;
            }

            .v-text-field__suffix {
                padding-left: $text-field-append-prepend-margin;
            }
        }

        &[type=text]::-ms-clear {
            display: none;
        }

        .v-input__prepend-inner,
        .v-input__append-inner {
            margin-top: $text-field-dense-append-prepend-margin;
        }
    }

    .v-input__prepend-inner,
    .v-input__append-inner {
        display: inline-flex;
        align-self: center;
        // padding-bottom: 4px;
        // align-self: flex-start;
        // margin-top: $text-field-append-prepend-margin;
        line-height: 1;
        user-select: none;

        // @include respond-to(xs) {
        //     padding-bottom: 8px;
        // }
    }

    .v-input__prepend-inner {
        margin-right: auto;
        padding-right: $text-field-append-prepend-margin;
    }

    .v-input__append-inner {
        margin-left: auto;
        padding-left: $text-field-append-prepend-margin;
    }

    .v-counter {
        margin-left: $text-field-counter-margin;
        white-space: nowrap;
    }

    .v-label {
        top: $text-field-label-top; // equal to the margin top of icons
        overflow: hidden;
        max-width: 90%;
        text-overflow: ellipsis;
        white-space: nowrap;
        transform-origin: top left;
        pointer-events: none;

        &--active {
            max-width: 133%;
            pointer-events: auto; // Show title attr on label hover

            @include generate-responsibility(transform,$text-field-label-active-transform);
        }
    }

    & > .v-input__control > .v-input__slot {
        cursor: text;

        &:before,
        &:after {
            content: '';
            position: absolute;
            bottom: -1px; // Needed for browser autocomplete styles
            left: 0;
            width: 100%;
            transition: $primary-transition;
        }

        &:before {
            border-color: inherit;
            border-style: solid;
            border-width: thin 0 0 0;
        }

        &:after {
            border-color: $vice;
            // border-color: currentColor;
            border-style: solid;
            border-width: thin 0 thin 0;
            background-color: $vice;
            // background-color: currentColor;
            transform: scaleX(0);
        }
    }

    &__details {
        // position: absolute;
        // bottom: 0;
        overflow: hidden;
        display: flex;
        flex: 1 0 auto;
        max-width: 100%;
        min-height: $text-field-details-min-height;
        // padding-top: 5px;
        // transform: translateY(100%);
    }

    &__prefix,
    &__suffix {
        align-self: center;
        white-space: nowrap;
        transition: color $primary-transition;
        cursor: default;
    }

    &__prefix {
        padding-right: $text-field-append-prepend-margin;
        text-align: right;
    }

    &__suffix {
        padding-left: $text-field-append-prepend-margin;
        white-space: nowrap;
    }

    &--error {
        .v-input__control > .v-input__slot {
            &:after {
                border-color: $redline;
                background-color: $redline;
            }
        }
    }

    &--reverse {
        .v-text-field__prefix {
            padding-right: 0;
            padding-left: $text-field-append-prepend-margin;
            text-align: left;
        }

        .v-text-field__suffix {
            padding-right: $text-field-append-prepend-margin;
            padding-left: 0;
        }
    }

    & > .v-input__control > .v-input__slot > .v-text-field__slot {
        position: relative;
        display: flex;
        flex: 1 1 auto;
    }

    &:not(.v-text-field--is-booted) {
        .v-label,
        legend {
            transition: none;
        }
    }

    &--filled,
    &--full-width,
    &--outlined {
        position: relative;

        & > .v-input__control > .v-input__slot {
            align-items: stretch;
            min-height: $text-field-filled-full-width-outlined-slot-min-height;
        }

        &.v-input--dense {
            > .v-input__control > .v-input__slot {
                min-height: $text-field-filled-full-width-outlined-dense-slot-min-height;
            }

            &.v-text-field--single-line,
            &.v-text-field--outlined,
            &.v-text-field--outlined.v-text-field--filled {
                > .v-input__control > .v-input__slot {
                    min-height: $text-field-filled-full-width-outlined-single-line-slot-min-height;
                }
            }
        }
    }

    &--outlined {
        border-radius: $text-field-border-radius;
    }

    &--full-width,
    &--enclosed {
        @include prepend-append-margin-top($text-field-enclosed-prepend-append-margin-top);

        &.v-input--dense:not(.v-text-field--solo) {
            @include prepend-append-margin-top($text-field-dense-prepend-append-margin-top);

            &.v-text-field--single-line {
                @include prepend-append-margin-top($text-field-single-line-prepend-append-margin-top);
            }

            &.v-text-field--outlined {
                @include prepend-append-margin-top($text-field-outlined-prepend-append-margin-top);
            }
        }
    }

    &--filled,
    &--full-width {
        .v-label {
            top: $text-field-filled-full-width-label-top;

            &--active {
                transform: $text-field-filled-full-width-label-active-transform;
            }
        }

        &.v-input--dense {
            .v-label {
                top: $text-field-dense-label-top;

                &--active {
                    transform: $text-field-dense-label-active-transform;
                }
            }

            &.v-text-field--single-line {
                .v-label {
                    top: $text-field-single-line-label-top;
                }
            }
        }
    }

    &--filled {
        border-radius: $text-field-filled-border-radius;

        &:not(.v-text-field--single-line) {
            input {
                margin-top: $text-field-filled-margin-top;
            }
        }

        &.v-input--dense:not(.v-text-field--single-line) {
            &.v-text-field--outlined {
                input {
                    margin-top: 0;
                }
            }
        }

        .v-text-field__prefix,
        .v-text-field__suffix {
            max-height: 32px;
            margin-top: 20px;
        }
    }

    &--full-width {
        border-radius: 0;
    }

    &--outlined,
    &--single-line {
        .v-text-field__slot {
            align-items: center;
        }
    }

    &.v-text-field--enclosed {
        margin: 0;
        padding: 0;

        &.v-text-field--single-line .v-text-field__prefix,
        .v-text-field__suffix {
            margin-top: 0;
        }

        &:not(.v-text-field--filled) {
            .v-progress-linear__background {
                display: none;
            }
        }

        &:not(.v-text-field--rounded) > .v-input__control > .v-input__slot,
        .v-text-field__details {
            padding: $text-field-enclosed-details-padding;
        }

        .v-text-field__details {
            margin-bottom: $text-field-details-margin-bottom;
            padding-top: $text-field-details-padding-top;
        }
    }

    &--reverse {
        input {
            text-align: right;
        }

        .v-label {
            transform-origin: top right;
        }

        & > .v-input__control > .v-input__slot,
        .v-text-field__slot {
            flex-direction: row-reverse;
        }
    }

    &--outlined,
    &--solo,
    &--rounded {
        & > .v-input__control > .v-input__slot {
            &:before,
            &:after {
                display: none;
            }
        }
    }

    &--outlined,
    &--solo {
        border-radius: $text-field-border-radius;
    }

    &--outlined {
        margin-bottom: $text-field-outlined-margin-bottom;
        transition: border $primary-transition;

        @include label-position($text-field-outlined-label-position-x, $text-field-outlined-label-position-y);

        &.v-input--dense {
            @include label-position($text-field-outlined-dense-label-position-x, $text-field-outlined-dense-label-position-y);
        }

        fieldset {
            position: absolute;
            top: $text-field-outlined-fieldset-top;
            right: 0;
            bottom: 0;
            left: 0;
            padding-left: $text-field-outlined-fieldset-padding;
            border-color: currentColor;
            border-style: solid;
            border-width: $text-field-outlined-fieldset-border-width;
            transition-duration: .3s;
            transition-property: color, border-width;
            transition-timing-function: map-get($transition, 'fast-in-fast-out');
            border-collapse: collapse;
            pointer-events: none;
        }

        &.v-text-field--reverse fieldset {
            padding-right: $text-field-outlined-fieldset-padding;
        }

        legend {
            padding: 0;
            text-align: left;
            line-height: $text-field-outlined-legend-line-height;
            transition: width $primary-transition;
        }

        &.v-text-field--reverse legend {
            margin-left: auto;
        }

        &.v-text-field--rounded {
            legend {
                margin-left: $text-field-rounded-legend-margin;
            }
        }

        & > .v-input__control > .v-input__slot {
            background: transparent;
        }

        .v-text-field__prefix {
            max-height: $text-field-prefix-max-height;
        }

        .v-input__prepend-outer,
        .v-input__append-outer {
            margin-top: $text-field-outlined-append-prepend-outer-margin-top; // 2px for border
        }

        &.v-input--is-focused,
        &.v-input--has-state {
            fieldset {
                border: $text-field-outlined-fieldset-border;
            }
        }
    }

    &--rounded {
        border-radius: $text-field-rounded-border-radius;

        > .v-input__control > .v-input__slot {
            padding: $text-field-outlined-rounded-slot-padding;
        }
    }

    &--shaped {
        border-radius: $text-field-shaped-border-radius;
    }

    &.v-text-field--solo {
        .v-label {
            top: $text-field-solo-label-top;
        }

        .v-input__control {
            min-height: $text-field-solo-control-min-height;
            padding: 0;

            input {
                caret-color: auto;
            }
        }

        &.v-input--dense > .v-input__control {
            min-height: $text-field-solo-dense-control-min-height;
        }

        &:not(.v-text-field--solo-flat) > .v-input__control > .v-input__slot {
            @include elevation(2);
        }

        .v-input__append-inner,
        .v-input__prepend-inner {
            align-self: center;
            margin-top: 0;
        }

        @include outer-margin-top($text-field-solo-outer-margin-top);

        &.v-input--dense {
            @include outer-margin-top($text-field-solo-dense-outer-margin-top);
        }
    }

    &.v-input--is-focused > .v-input__control > .v-input__slot:after {
        transform: scaleX(1);
    }

    &.v-input--has-state > .v-input__control > .v-input__slot:before {
        border-color: currentColor;
    }
}
