@import './_variables.scss';

/* stylelint-disable declaration-no-important,no-duplicate-selectors */
.v-menu {
    display: none;

    &--attached {
        display: inline;
    }

    &__content {
        position: absolute;
        overflow-x: hidden;
        overflow-y: auto;
        display: inline-block;
        max-width: 80%;
        contain: content;
        // This is required for an issue on Chrome 65
        // that prevents scrolling after a menu is opened
        will-change: transform;

        @include elevation($menu-content-elevation);
        @include radius($menu-content-border-radius);

        &--active {
            pointer-events: none;
        }

        &--auto {
            .v-list-item {
                transition-duration: .3s;
                transition-property: transform, opacity;
                transition-timing-function: map-get($transition, 'fast-in-fast-out');
            }
        }

        &--fixed {
            position: fixed;
        }

        & > .card {
            contain: content;
            backface-visibility: hidden;
        }
    }

    > .v-menu__content {
        max-width: none;
    }

    &-transition {
        &-enter {
            .v-list-item {
                min-width: 0;
                pointer-events: none;
            }
        }

        &-enter-to {
            .v-list-item {
                transition-delay: .1s;
            }
        }

        &-leave-active,
        &-leave-to {
            pointer-events: none;
        }

        &-enter,
        &-leave-to {
            opacity: 0;
        }

        &-enter-active,
        &-leave-active {
            transition: all .3s map-get($transition, 'fast-in-fast-out');
        }
    }
}

.v-menu-transition-enter {
    &.v-menu__content--auto {
        transition: none !important;

        .v-list-item {
            opacity: 0;
            transform: translateY(-15px);
        }

        .v-list-item--active {
            opacity: 1;
            transform: none !important;
            pointer-events: auto;
        }
    }
}
